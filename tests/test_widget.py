import pytest
from src.widget import mask_account_card, get_mask_card_number, get_mask_account, get_date


def test_mask_account_card():
    """Тестирование функции mask_account_card"""

    # Настройка тестов
    test_cases = [
        # Тесты для корректного ввода
        ("Visa Platinum 1234567812345678", "Visa Platinum 1234 56** **** 5678"),
        ("Maestro 8765432187654321", "Maestro 8765 43** **** 4321"),
        ("Счет 12345678901234567890", "Счет **7890"),
        # Тесты для некорректного ввода
        ("Visa Platinum 12345678", "Некорректный ввод"),  # Неверная длина карты
        ("Maestro 87654321", "Некорректный ввод"),  # Неверная длина карты
        ("InvalidType 1234567812345678", "Некорректный ввод"),  # Неверный тип карты
        ("Счет", "Некорректный ввод"),  # Неполный ввод
        ("", "Некорректный ввод"),  # Пустая строка
    ]

    for card_info, expected in test_cases:
        assert mask_account_card(card_info) == expected


def test_get_date():
    """Тестирование функции get_date"""

    # Настройка тестов
    test_cases = [
        ("2024-03-11", "11.03.2024"),  # Корректная дата
        ("2023-12-31", "31.12.2023"),  # Корректная дата
        ("2024-02-29", "29.02.2024"),  # Високосный год
        ("2023-02-30", "Некорректный формат даты"),  # Некорректная дата
        ("2024-03-14T12:00:00", "14.03.2024"),  # Дата с временем
        ("invalid-date", "Некорректный формат даты"),  # Неверный формат
        ("", "Некорректный формат даты"),  # Пустая строка
    ]

    for date_str, expected in test_cases:
        assert get_date(date_str) == expected


# Запускаем тесты, если файл выполняется как основной
if __name__ == "__main__":
    pytest.main()
